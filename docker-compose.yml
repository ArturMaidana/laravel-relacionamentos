version: "3.7"



services:
    # image project
    laravel_8:
        build:
            args:
                user: carlos
                uid: 1000
            context: ./
            dockerfile: Dockerfile
        image: laravel-app
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./:/var/www
        depends_on:
            - redis
            - queue
        networks:
            - laravel-eti

    # nginx
    nginx:
        image: nginx:alpine
        restart: unless-stopped
        ports:
            - 8180:80
        volumes:
            - ./:/var/www
            - ./docker/nginx/:/etc/nginx/conf.d/
        networks:
            - laravel-eti

    # db mysql
    mysql:
        image: mysql:5.7.22
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
        volumes:
            - ./.docker/mysql/dbdata:/var/lib/mysql
        ports:
            - 3389:3306
        networks:
            - laravel-eti

    # queue
    queue:
        build:
            args:
                user: carlos
                uid: 1000
            context: ./
            dockerfile: Dockerfile
        restart: unless-stopped
        command: "php artisan queue:work"
        volumes:
            - ./:/var/www
        depends_on:
            - redis
        networks:
            - laravel-eti

    # redis
    redis:
        image: redis:latest
        networks:
            - laravel-eti


       # node para compilar assets (npm, mix, vite)
    node:
        image: node:18
        working_dir: /var/www
        volumes:
            - ./:/var/www
        networks:
            - laravel-eti
        # Não precisa ficar rodando sempre, só quando chamar manualmente
        command: sh -c "npm install && npm run dev"

networks:
    laravel-eti:
        driver: bridge
